version: "0.29.0"

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_facebook_pages/schemas/{{ parameters['name'] }}.json"
  selector:
    extractor:
      field_path: ["data"]
  requester:
    url_base: "https://graph.facebook.com/v17.0"
    http_method: "GET"
    error_handler:
      type: CompositeErrorHandler
      error_handlers:
        - type: DefaultErrorHandler
          response_filters:
            - http_codes: [400]
              action: RETRY
        - type: DefaultErrorHandler
    authenticator:
      type: CustomAuthenticator
      class_name: source_facebook_pages.components.AuthenticatorFacebookPageAccessToken
      page_id: "{{ config['page_id'] }}"
      access_token: "{{ config['access_token'] }}"
  facebook_post_paginator:
    type: DefaultPaginator
    pagination_strategy:
      type: "CursorPagination"
      cursor_value: "{{ response.paging.get('cursors', {}).get('after') }}"
      stop_condition: "{{ response.paging == '' or not response.paging.get('next') }}"
      page_size: 100
    page_size_option:
      field_name: "page_size"
      inject_into: "request_parameter"
    page_token_option:
      type: RequestOption
      field_name: "after"
      inject_into: "request_parameter"
  retriever:
    record_selector:
      $ref: "#/definitions/selector"
    paginator:
      type: NoPagination
    requester:
      $ref: "#/definitions/requester"

  base_stream:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/retriever"
    transformations:
      - type: CustomTransformation
        class_name: source_facebook_pages.components.CustomFieldTransformation
  page_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "page"
      primary_key: "id"
      path: "/{{ config['page_id'] }}"
    retriever:
      $ref: "#/definitions/retriever"
      record_selector:
        extractor:
          field_path: []
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields: |
            {{
              ','.join([
              'id',
              'about',
              'category',
              'category_list',
              'checkins',
              'company_overview',
              'contact_address',
              'country_page_likes',
              'cover',
              'description',
              'description_html',
              'display_subtext',
              'displayed_message_response_time',
              'emails',
              'engagement',
              'fan_count',
              'featured_video',
              'features',
              'followers_count',
              'food_styles',
              'founded',
              'general_info',
              'general_manager',
              'genre',
              'hometown',
              'hours',
              'impressum',
              'influences',
              'is_always_open',
              'is_chain',
              'is_community_page',
              'is_owned',
              'is_permanently_closed',
              'is_published',
              'is_unclaimed',
              'is_webhooks_subscribed',
              'leadgen_tos_acceptance_time',
              'leadgen_tos_accepted',
              'leadgen_tos_accepting_user',
              'link',
              'location',
              'members',
              'merchant_review_status',
              'mission',
              'mpg',
              'name',
              'name_with_location_descriptor',
              'network',
              'new_like_count',
              'offer_eligible',
              'overall_star_rating',
              'page_token',
              'parking',
              'payment_options',
              'personal_info',
              'personal_interests',
              'pharma_safety_info',
              'phone',
              'pickup_options',
              'place_type',
              'plot_outline',
              'press_contact',
              'price_range',
              'privacy_info_url',
              'produced_by',
              'products',
              'promotion_eligible',
              'promotion_ineligible_reason',
              'public_transit',
              'rating_count',
              'record_label',
              'release_date',
              'restaurant_services',
              'restaurant_specialties',
              'schedule',
              'screenplay_by',
              'season',
              'single_line_address',
              'starring',
              'start_info',
              'store_code',
              'store_location_descriptor',
              'store_number',
              'studio',
              'talking_about_count',
              'temporary_status',
              'unread_message_count',
              'unread_notif_count',
              'unseen_message_count',
              'username',
              'verification_status',
              'voip_info',
              'website',
              'were_here_count',
              'whatsapp_number',
              'written_by',
              'albums',
              'canvas_elements',
              'events',
              'feed',
              'global_brand_children',
              'groups',
              'image_copyrights',
              'indexed_videos',
              'likes',
              'photos',
              'product_catalogs',
              'video_lists',
              'videos',
              ])
            }}

  post_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "post"
      primary_key: "id"
      path: "/{{ config['page_id'] }}/posts"
    retriever:
      $ref: "#/definitions/retriever"
      paginator:
        $ref: "#/definitions/facebook_post_paginator"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields: |
            {{
              ','.join([
              'id',
              'feed_targeting',
              'from',
              'message',
              'message_tags',
              'comments',
              'likes',
              'reactions',
              'to'
              ])
            }}

  post_insights_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "post_insights"
      primary_key: "id"
      path: "/{{ config['page_id'] }}/posts"
    retriever:
      $ref: "#/definitions/retriever"
      paginator:
        $ref: "#/definitions/facebook_post_paginator"
      record_selector:
        type: RecordSelector
        extractor:
          field_path: ["data", "*", "insights", "data", "*"]
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          fields: |
            {{
              'insights.metric(%s)' % ','.join([
              'post_impressions',
              'post_impressions_unique',
              'post_impressions_paid',
              'post_impressions_paid_unique',
              'post_impressions_fan',
              'post_impressions_fan_unique',
              'post_impressions_organic',
              'post_impressions_organic_unique',
              'post_impressions_viral',
              'post_impressions_viral_unique',
              'post_impressions_nonviral',
              'post_impressions_nonviral_unique',
              'post_impressions_by_story_type',
              'post_impressions_by_story_type_unique',
              'post_engaged_users',
              'post_negative_feedback',
              'post_negative_feedback_unique',
              'post_negative_feedback_by_type',
              'post_negative_feedback_by_type_unique',
              'post_engaged_fan',
              'post_clicks',
              'post_clicks_unique',
              'post_clicks_by_type',
              'post_clicks_by_type_unique',
              'post_reactions_by_type_total',
              ])
            }}

  page_insights_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "page_insights"
      primary_key: "id"
      path: "/{{ config['page_id'] }}/insights"
    retriever:
      $ref: "#/definitions/retriever"
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          metric: |
            {{
              ','.join([
              'page_tab_views_login_top_unique',
              'page_tab_views_login_top',
              'page_tab_views_logout_top',
              'page_total_actions',
              'page_cta_clicks_logged_in_total',
              'page_cta_clicks_logged_in_unique',
              'page_call_phone_clicks_logged_in_unique',
              'page_get_directions_clicks_logged_in_unique',
              'page_website_clicks_logged_in_unique',
              'page_post_engagements',
              'page_consumptions_unique',
              'page_consumptions_by_consumption_type',
              'page_consumptions_by_consumption_type_unique',
              'page_places_checkin_total',
              'page_places_checkin_total_unique',
              'page_negative_feedback',
              'page_negative_feedback_unique',
              'page_negative_feedback_by_type',
              'page_negative_feedback_by_type_unique',
              'page_fans_online',
              'page_fans_online_per_day',
              'page_fan_adds_by_paid_non_paid_unique',
              'page_impressions',
              'page_impressions_unique',
              'page_impressions_paid',
              'page_impressions_paid_unique',
              'page_impressions_organic_v2',
              'page_impressions_organic_unique_v2',
              'page_impressions_viral',
              'page_impressions_viral_unique',
              'page_impressions_nonviral',
              'page_impressions_nonviral_unique',
              'page_impressions_by_story_type',
              'page_impressions_by_story_type_unique',
              'page_impressions_by_city_unique',
              'page_impressions_by_country_unique',
              'page_impressions_by_locale_unique',
              'page_impressions_by_age_gender_unique',
              'page_impressions_viral_frequency_distribution',
              ])
            }}
streams:
  - "#/definitions/page_stream"
  - "#/definitions/post_stream"
  - "#/definitions/post_insights_stream"
  - "#/definitions/page_insights_stream"

check:
  stream_names:
    - "page"
